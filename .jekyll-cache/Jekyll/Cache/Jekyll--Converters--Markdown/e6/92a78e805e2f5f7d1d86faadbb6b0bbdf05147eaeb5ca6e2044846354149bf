I"˜<div align="middle">
    <h1>Posts</h1>
    
    <h2><a href="/2022/03/12/Intigriti-CTF-Phorrifyingp.html">Intigriti CTF â€” Phorrifyingp</a></h2>
    <span class="post-date">March 12, 2022</span>
    <p>In this post Iâ€™ll discuss the first challenge our team solved as part of the Intigriti CTF. This was a php web challenge where we were given the source and asked to read the contents of the file to retrieve a flag.</p>


    <hr />
    
    <h2><a href="/2020/05/12/Open-Redirect-Filters.html">Open Redirect Filters</a></h2>
    <span class="post-date">May 12, 2020</span>
    <p>Today Iâ€™m writing about Open Redirect bypasses since it was my first bug I have found since returning. One I normally donâ€™t bother reporting as itâ€™s not usually very high paying and damages impacts ratings on H1. Nonetheless, Open Redirects are a nice starting point for any security researcher and it seems almost all of them require a filter bypass.</p>


    <hr />
    
    <h2><a href="/2019/06/17/XSS-Filter-Evasion.html">XSS Filter Evasion</a></h2>
    <span class="post-date">June 17, 2019</span>
    <p>Youâ€™re testing a web application and finally find an endpoint that is reflecting HTML code. You drop your XSS payload and BOOM! All your hopes and dreams vanish before your eyes as that damn WAF appears out of nowhere, only to laugh at you.</p>


    <hr />
    
    <h2><a href="/2019/05/23/Exploiting-Post-Based-CSRF.html">Exploiting POST-Based CSRF</a></h2>
    <span class="post-date">May 23, 2019</span>
    <p>This article will explore a variety of methods to identify, chain and exploit POST-Based CSRF to maximize the severity of your findings.</p>


    <hr />
    
</div>
:ET